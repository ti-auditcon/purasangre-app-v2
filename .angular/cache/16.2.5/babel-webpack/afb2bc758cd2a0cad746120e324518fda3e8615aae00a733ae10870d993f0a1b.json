{"ast":null,"code":"import _asyncToGenerator from \"C:/dev/Ionic/purasangre-app-v2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _a;\nimport { __decorate, __metadata } from \"tslib\";\nimport { environment } from '../../../../environments/environment';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Component, NgZone } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Platform } from '@ionic/angular';\nimport { Preferences } from '@capacitor/preferences';\n// import { InAppBrowser } from '@ionic-native/in-app-browser/ngx';\nimport { Browser } from '@capacitor/browser';\nlet FlowPage = class FlowPage {\n  constructor(activatedRoute, platform, zone, http, route, browser) {\n    this.activatedRoute = activatedRoute;\n    this.platform = platform;\n    this.zone = zone;\n    this.http = http;\n    this.route = route;\n    this.browser = browser;\n    this.loading = true;\n    this.loaded = false;\n  }\n  ngOnInit() {}\n  ionViewDidEnter() {\n    var _this = this;\n    this.loaded = false;\n    this.loading = true;\n    const id = this.activatedRoute.snapshot.paramMap.get('planId');\n    console.log(id);\n    Preferences.get({\n      key: 'authData'\n    }).then(authData => {\n      const parsedData = JSON.parse(authData.value);\n      const httpOptions = {\n        headers: new HttpHeaders({\n          Authorization: `Bearer ${parsedData.token}` // updated\n        })\n      };\n\n      this.http.get(`${environment.SERVER_URL}/plans/${id}/contract`, httpOptions).subscribe(result => {\n        console.log(result.data);\n        this.http.get(`${environment.SERVER_URL}/flow/${result.data.id}`, httpOptions).subscribe(flowresult => {\n          console.log('url flow');\n          console.log(flowresult.url);\n          this.navigateFlow(flowresult.url);\n          browser.on('loadstop').subscribe(event => {\n            console.log('cargo android');\n          });\n          browser.on('exit').subscribe(event => {\n            this.zone.run( /*#__PURE__*/_asyncToGenerator(function* () {\n              yield _this.route.navigate([`/plans/${id}`]);\n            }));\n            browser.close();\n          });\n          // if (this.platform.is('android')) {\n          //     const browser = this.iab.create(\n          //         flowresult.url, '_blank',\n          //         `hideurlbar=yes,footer=no,toolbarcolor=#141A29,\n          //         navigationbuttoncolor=#D3D5E0,closebuttoncaption=cerrar,\n          //         closebuttoncolor=#D3D5E0`\n          //     );\n          //     browser.on('loadstop').subscribe((event) => {\n          //       console.log('cargo android');\n          //     });\n          //     browser.on('exit').subscribe((event) => {\n          //         this.zone.run(async () => {\n          //             await this.route.navigate([`/plans/${id}`]);\n          //         });\n          //         browser.close();\n          //     });\n          // }\n          // if (this.platform.is('ios')) {\n          //     const browser = this.iab.create(\n          //         flowresult.url,\n          //         '_blank',\n          //         `toolbarposition=top,closebuttoncaption=Cerrar,\n          //         toolbarcolor=#141A29,closebuttoncolor=#D3D5E0,\n          //         navigationbuttoncolor=#D3D5E0`\n          //     );\n          //     browser.on('loadstop').subscribe((event) => {\n          //       console.log('cargo ios');\n          //     });\n          //     browser.on('exit').subscribe((event) => {\n          //         this.zone.run(async () => {\n          //             await this.route.navigate([`/plans/${id}`]);\n          //         });\n          //         browser.close();\n          //     });\n          // }\n        });\n      });\n    });\n  }\n\n  navigateFlow(url) {\n    return _asyncToGenerator(function* () {\n      console.log('en navigateFlow');\n      yield Browser.open({\n        url\n      }).then(page => {\n        console.log(page);\n      });\n    })();\n  }\n};\nFlowPage = __decorate([Component({\n  selector: 'app-flow',\n  templateUrl: './flow.page.html',\n  styleUrls: ['./flow.page.scss']\n}), __metadata(\"design:paramtypes\", [ActivatedRoute, Platform, NgZone, HttpClient, Router, typeof (_a = typeof Browser !== \"undefined\" && Browser) === \"function\" ? _a : Object])], FlowPage);\nexport { FlowPage };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
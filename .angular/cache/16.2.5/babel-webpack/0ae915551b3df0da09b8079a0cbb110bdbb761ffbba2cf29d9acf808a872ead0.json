{"ast":null,"code":"import _asyncToGenerator from \"C:/dev/Ionic/purasangre-app-v2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { EventEmitter, ElementRef } from '@angular/core';\nimport { ActionSheetController, Platform } from '@ionic/angular';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = [\"filePicker\"];\nfunction ImagePickerComponent_input_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 5, 6);\n    i0.ɵɵlistener(\"change\", function ImagePickerComponent_input_3_Template_input_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onFileChosen($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c1 = function (a0) {\n  return [a0];\n};\n// import { Plugins, Capacitor, CameraResultType, CameraSource } from '@capacitor/core';\nlet ImagePickerComponent = /*#__PURE__*/(() => {\n  class ImagePickerComponent {\n    constructor(actionSheetController, platform) {\n      this.actionSheetController = actionSheetController;\n      this.platform = platform;\n      this.imagePick = new EventEmitter();\n      this.userPicker = false;\n    }\n    ngOnInit() {\n      console.log(`la plataforma es mobile : ${this.platform.is('mobile')}`);\n      console.log(`la plataforma es hybrid: ${this.platform.is('hybrid')}`);\n      console.log(`la plataforma es desktop: ${this.platform.is('desktop')}`);\n      if (this.platform.is('mobile') && !this.platform.is('hybrid') || this.platform.is('desktop')) {\n        this.userPicker = true;\n      }\n    }\n    onPickImage() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        if (!Capacitor.isPluginAvailable('Camera') || _this.userPicker) {\n          _this.filePickeRef.nativeElement.click();\n          return;\n        }\n        const action = yield _this.actionSheetController.create({\n          header: 'Cambiar Foto de Perfil',\n          buttons: [{\n            text: 'Tomar Foto',\n            icon: 'camera',\n            handler: () => {\n              _this.openCamera(CameraSource.Camera);\n              console.log('Tomar una foto clicked');\n            }\n          }, {\n            text: 'Elegir de Mis Fotos',\n            icon: 'image',\n            handler: () => {\n              _this.openCamera(CameraSource.Photos);\n              console.log('Elegir de Mis Fotos clicked');\n            }\n          }, {\n            text: 'Cancelar',\n            icon: 'close',\n            role: 'cancel',\n            handler: () => {\n              _this.openCamera(null);\n              console.log('Cancel clicked');\n            }\n          }]\n        });\n        action.present();\n      })();\n    }\n    openCamera(value) {\n      console.log('llegue al metodo escogido');\n      if (value) {\n        Plugins.Camera.getPhoto({\n          quality: 50,\n          // Whether to allow the user to crop or make small edits (platform specific)\n          resultType: CameraResultType.Base64,\n          saveToGallery: true,\n          allowEditing: true,\n          width: 320,\n          // height: 320,\n          correctOrientation: true,\n          source: value\n        }).then(image => {\n          this.selectedImage = image.base64String;\n          console.log('ahora emito la foto cochino');\n          this.imagePick.emit(image.base64String);\n        }).catch(error => {\n          console.log(error);\n          return false;\n        });\n      }\n    }\n    onFileChosen(event) {\n      const pickedFile = event.target.files[0];\n      if (!pickedFile) {\n        return;\n      }\n      const fr = new FileReader();\n      fr.onload = () => {\n        const dataUrl = fr.result.toString();\n        this.selectedImage = dataUrl;\n        this.imagePick.emit(pickedFile);\n      };\n      fr.readAsDataURL(pickedFile);\n    }\n    static #_ = this.ɵfac = function ImagePickerComponent_Factory(t) {\n      return new (t || ImagePickerComponent)(i0.ɵɵdirectiveInject(i1.ActionSheetController), i0.ɵɵdirectiveInject(i1.Platform));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ImagePickerComponent,\n      selectors: [[\"app-image-picker\"]],\n      viewQuery: function ImagePickerComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.filePickeRef = _t.first);\n        }\n      },\n      inputs: {\n        AvatarImage: \"AvatarImage\"\n      },\n      outputs: {\n        imagePick: \"imagePick\"\n      },\n      decls: 7,\n      vars: 4,\n      consts: [[3, \"click\"], [1, \"avatar-container\"], [1, \"persona-avatar\", 3, \"src\"], [\"type\", \"file\", \"accept\", \"image/jpeg\", 3, \"change\", 4, \"ngIf\"], [1, \"persona-cambiar-foto-perfil\"], [\"type\", \"file\", \"accept\", \"image/jpeg\", 3, \"change\"], [\"filePicker\", \"\"]],\n      template: function ImagePickerComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵlistener(\"click\", function ImagePickerComponent_Template_div_click_0_listener() {\n            return ctx.onPickImage();\n          });\n          i0.ɵɵelementStart(1, \"div\", 1);\n          i0.ɵɵelement(2, \"img\", 2);\n          i0.ɵɵtemplate(3, ImagePickerComponent_input_3_Template, 2, 0, \"input\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\")(5, \"h5\", 4);\n          i0.ɵɵtext(6, \"Cambiar\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"src\", i0.ɵɵpureFunction1(2, _c1, ctx.AvatarImage), i0.ɵɵsanitizeUrl);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.userPicker);\n        }\n      },\n      dependencies: [i2.NgIf],\n      styles: [\"input[type=file][_ngcontent-%COMP%]{display:none}\"]\n    });\n  }\n  return ImagePickerComponent;\n})();\nexport { ImagePickerComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
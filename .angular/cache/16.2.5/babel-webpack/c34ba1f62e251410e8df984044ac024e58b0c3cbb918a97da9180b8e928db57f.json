{"ast":null,"code":"import { Route, UrlSegment, Router } from '@angular/router';\nimport { of } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { take, tap, switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nlet AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(authService, router) {\n      this.authService = authService;\n      this.router = router;\n    }\n    canLoad(route, segments) {\n      return this.authService.userIsAuthenticated.pipe(take(1), switchMap(isAuthenticated => {\n        if (!isAuthenticated) {\n          return this.authService.autoLogin();\n        }\n        return of(isAuthenticated);\n      }), tap(isAuthenticated => {\n        if (!isAuthenticated) {\n          this.router.navigateByUrl('/auth');\n        }\n      }));\n    }\n    static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n      return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AuthGuard;\n})();\nexport { AuthGuard };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _asyncToGenerator from \"C:/dev/Ionic/purasangre-app-v2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate, __metadata } from \"tslib\";\n// env\nimport { environment } from '../../../../environments/environment';\nimport { ActivatedRoute } from '@angular/router';\nimport { Component, ViewChild } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { IonInfiniteScroll, LoadingController } from '@ionic/angular';\nimport { Platform, ModalController } from '@ionic/angular';\nimport { Preferences } from '@capacitor/preferences';\nimport { ConfirmPage } from '../confirm/confirm.page';\nlet AddConfirmPage = class AddConfirmPage {\n  constructor(plt, modalController, http, activatedRoute, loadingController) {\n    this.plt = plt;\n    this.modalController = modalController;\n    this.http = http;\n    this.activatedRoute = activatedRoute;\n    this.loadingController = loadingController;\n    this.clase = [];\n    this.users = [];\n    this.reservations = [];\n    this.page = 1;\n    this.isModalOpen = false;\n    this.haymodal = false;\n    this.varIsPressed = false;\n    if (this.plt.is('ios')) {\n      // Si es iOS\n      this.buttonFixIOS = 'button-fix-ios';\n      this.buttonFixAndroid = 'display-none';\n    } else {\n      // Si es Android\n      this.buttonFixIOS = 'display-none';\n      this.buttonFixAndroid = 'button-fix';\n    }\n  }\n  openModal() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const id = _this.activatedRoute.snapshot.paramMap.get('claseId');\n      const modal = yield _this.modalController.create({\n        component: ConfirmPage,\n        componentProps: {\n          title: 'Reservar esta hora',\n          message: _this.clase.dateHuman + ' de ' + _this.clase.start + ' a ' + _this.clase.end + 'hrs',\n          buttonIcon: '/assets/icon/info.svg',\n          claseId: id,\n          buttonActionAdd: true\n        },\n        cssClass: 'modal-confirm'\n      });\n      // this.title = modal.componentProps.title;\n      // this.message = modal.componentProps.message;\n      // this.buttonIcon = modal.componentProps.buttonIcon;\n      return yield modal.present();\n    })();\n  }\n  ionViewDidEnter() {\n    this.retrieveClase();\n  }\n  retrieveClase() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const loading = yield _this2.loadingController.create({\n        spinner: 'crescent'\n      });\n      loading.present().then(() => {\n        const id = _this2.activatedRoute.snapshot.paramMap.get('claseId');\n        Preferences.get({\n          key: 'authData'\n        }).then(authData => {\n          const parsedData = JSON.parse(authData.value);\n          _this2.httpOptions = {\n            headers: new HttpHeaders({\n              Authorization: `Bearer ${parsedData.token}`\n            })\n          };\n          _this2.http.get(`${environment.SERVER_URL}/clases/${id}`, _this2.httpOptions).subscribe(result => {\n            _this2.clase = result.data;\n            console.log(_this2.clase);\n            _this2.reservationUrl = _this2.clase.rels.reservations.href;\n            _this2.loadUsers();\n            loading.dismiss();\n          });\n        });\n      });\n    })();\n  }\n  // primeros 10 usuarios\n  loadUsers() {\n    console.log('cargando usuarios');\n    this.http.get(`${this.reservationUrl}?page=${this.page}`, this.httpOptions).subscribe(result => {\n      console.log(result);\n      this.reservations = result.data;\n      console.log(this.reservations);\n      this.page++;\n    });\n  }\n  // Cargando usuarios por infinit loader\n  loadMoreUsers(infiniteScrollEvent) {\n    this.http.get(`${this.reservationUrl}?page=${this.page}`, this.httpOptions).subscribe(result => {\n      console.log('mas users agregados');\n      this.reservations = this.reservations.concat(result.data);\n      console.log(this.reservations);\n      this.page++;\n      infiniteScrollEvent.target.complete();\n    });\n    // this.days = this.days.concat(response.data.data);\n    // event.target.complete();\n  }\n  // image popup\n  imageModal(img) {\n    console.log('click image');\n    this.isModalOpen = true;\n    this.selectedImg = img;\n    // this.modalController.create({\n    //     component: ImageModalPage,\n    //     componentProps: { img }\n    // }).then(modal => {\n    //     modal.present();\n    // });\n  }\n\n  imageModalDismiss() {\n    console.log('modal cerrado');\n    this.isModalOpen = false;\n  }\n};\n__decorate([ViewChild(IonInfiniteScroll, {\n  static: true\n}), __metadata(\"design:type\", IonInfiniteScroll)], AddConfirmPage.prototype, \"infiniteScroll\", void 0);\nAddConfirmPage = __decorate([Component({\n  selector: 'app-add-confirm',\n  templateUrl: './add-confirm.page.html',\n  styleUrls: ['./add-confirm.page.scss']\n}), __metadata(\"design:paramtypes\", [Platform, ModalController, HttpClient, ActivatedRoute, LoadingController])], AddConfirmPage);\nexport { AddConfirmPage };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}